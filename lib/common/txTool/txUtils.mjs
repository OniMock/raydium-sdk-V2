import{ComputeBudgetProgram as V,Keypair as P,PublicKey as b,Transaction as p,TransactionMessage as E,VersionedTransaction as C}from"@solana/web3.js";import{get as L,set as R}from"lodash";var d=class{logLevel;name;constructor(e){this.logLevel=e.logLevel!==void 0?e.logLevel:0,this.name=e.name}set level(e){this.logLevel=e}get time(){return Date.now().toString()}get moduleName(){return this.name}isLogLevel(e){return e<=this.logLevel}error(...e){return this.isLogLevel(0)?(console.error(this.time,this.name,"sdk logger error",...e),this):this}logWithError(...e){let r=e.map(n=>typeof n=="object"?JSON.stringify(n):n).join(", ");throw new Error(r)}warning(...e){return this.isLogLevel(1)?(console.warn(this.time,this.name,"sdk logger warning",...e),this):this}info(...e){return this.isLogLevel(2)?(console.info(this.time,this.name,"sdk logger info",...e),this):this}debug(...e){return this.isLogLevel(3)?(console.debug(this.time,this.name,"sdk logger debug",...e),this):this}},y={},k={};function S(t){let e=L(y,t);if(!e){let r=L(k,t);e=new d({name:t,logLevel:r}),R(y,t,e)}return e}var h={CreateAccount:"CreateAccount",InitAccount:"InitAccount",CreateATA:"CreateATA",CloseAccount:"CloseAccount",TransferAmount:"TransferAmount",InitMint:"InitMint",MintTo:"MintTo",InitMarket:"InitMarket",Util1216OwnerClaim:"Util1216OwnerClaim",SetComputeUnitPrice:"SetComputeUnitPrice",SetComputeUnitLimit:"SetComputeUnitLimit",ClmmCreatePool:"ClmmCreatePool",ClmmOpenPosition:"ClmmOpenPosition",ClmmIncreasePosition:"ClmmIncreasePosition",ClmmDecreasePosition:"ClmmDecreasePosition",ClmmClosePosition:"ClmmClosePosition",ClmmSwapBaseIn:"ClmmSwapBaseIn",ClmmSwapBaseOut:"ClmmSwapBaseOut",ClmmInitReward:"ClmmInitReward",ClmmSetReward:"ClmmSetReward",ClmmCollectReward:"ClmmCollectReward",ClmmLockPosition:"ClmmLockPosition",ClmmHarvestLockPosition:"ClmmHarvestLockPosition",AmmV4Swap:"AmmV4Swap",AmmV4AddLiquidity:"AmmV4AddLiquidity",AmmV4RemoveLiquidity:"AmmV4RemoveLiquidity",AmmV4SimulatePoolInfo:"AmmV4SimulatePoolInfo",AmmV4SwapBaseIn:"AmmV4SwapBaseIn",AmmV4SwapBaseOut:"AmmV4SwapBaseOut",AmmV4CreatePool:"AmmV4CreatePool",AmmV4InitPool:"AmmV4InitPool",AmmV5AddLiquidity:"AmmV5AddLiquidity",AmmV5RemoveLiquidity:"AmmV5RemoveLiquidity",AmmV5SimulatePoolInfo:"AmmV5SimulatePoolInfo",AmmV5SwapBaseIn:"AmmV5SwapBaseIn",AmmV5SwapBaseOut:"AmmV5SwapBaseOut",RouteSwap:"RouteSwap",RouteSwap1:"RouteSwap1",RouteSwap2:"RouteSwap2",FarmV3Deposit:"FarmV3Deposit",FarmV3Withdraw:"FarmV3Withdraw",FarmV3CreateLedger:"FarmV3CreateLedger",FarmV4Withdraw:"FarmV4Withdraw",FarmV5Deposit:"FarmV5Deposit",FarmV5Withdraw:"FarmV5Withdraw",FarmV5CreateLedger:"FarmV5CreateLedger",FarmV6Deposit:"FarmV6Deposit",FarmV6Withdraw:"FarmV6Withdraw",FarmV6Create:"FarmV6Create",FarmV6Restart:"FarmV6Restart",FarmV6CreatorAddReward:"FarmV6CreatorAddReward",FarmV6CreatorWithdraw:"FarmV6CreatorWithdraw",CpmmCreatePool:"CpmmCreatePool",CpmmAddLiquidity:"CpmmAddLiquidity",CpmmWithdrawLiquidity:"CpmmWithdrawLiquidity",CpmmSwapBaseIn:"CpmmSwapBaseIn",CpmmSwapBaseOut:"CpmmSwapBaseOut",CpmmLockLp:"CpmmLockLp",CpmmCollectLockFee:"CpmmCollectLockFee",TransferTip:"TransferTip",NonceAccount:"NonceAccount"};import{TOKEN_PROGRAM_ID as F}from"@solana/spl-token";var m=S("Raydium_txUtil"),T=1644;function J(t){let e=[],r=[];return t.microLamports&&(e.push(V.setComputeUnitPrice({microLamports:t.microLamports})),r.push(h.SetComputeUnitPrice)),t.units&&(e.push(V.setComputeUnitLimit({units:t.units})),r.push(h.SetComputeUnitLimit)),{instructions:e,instructionTypes:r}}async function X(t,e){let r=e??"confirmed";return(await t.getLatestBlockhash?.({commitment:r}))?.blockhash}async function Y(t,e){return t.getSignatureStatuses([e]),new Promise((r,n)=>{let i=setTimeout(n,6e4);t.onSignature(e,s=>{if(clearTimeout(i),!s.err){r("");return}n(Object.assign(s.err,{txId:e}))},"confirmed")})}function B(t,e){t.length<1&&m.logWithError(`no instructions provided: ${t.toString()}`),e.length<1&&m.logWithError(`no signers provided:, ${e.toString()}`);let r=new p;r.recentBlockhash="11111111111111111111111111111111",r.feePayer=e[0],r.add(...t);try{return Buffer.from(r.serialize({verifySignatures:!1})).toString("base64").length<T}catch{return!1}}async function Z(t,e,r,n=!0){let i=new b("RaydiumSimuLateTransaction11111111111111111"),s=[],a=new p;a.feePayer=i;for(let o of e)B([...a.instructions,o],[i])||(s.push(a),a=new p,a.feePayer=i),a.add(o);a.instructions.length>0&&s.push(a);let u=[];try{if(u=await x(t,s,n),u.find(o=>o.err!==null))throw Error("rpc simulateTransaction error")}catch(o){o instanceof Error&&m.logWithError("failed to simulate for instructions","RPC_ERROR",{message:o.message})}let c=[];for(let o of u)if(m.debug("simulate result:",o),o.logs){let l=o.logs.filter(g=>g&&g.includes(r));m.debug("filteredLog:",c),l.length||m.logWithError("simulate log not match keyword","keyword",r),c.push(...l)}return c}function Q(t,e){let r=t.match(/{["\w:,]+}/g);return!r||r.length!==1?m.logWithError(`simulate log fail to match json, keyword: ${e}`):r[0]}function ee(t,e){let n=new RegExp(`"${e}":(\\d+)`,"g").exec(t);return!n||n.length!==2?m.logWithError(`simulate log fail to match key", key: ${e}`):n[1]}function te(t,e){let[r,n]=b.findProgramAddressSync(t,e);return{publicKey:r,nonce:n}}async function x(t,e,r){let n=[];if(r){let i=await t.getLatestBlockhash(),s=[];for(let o of e){o.recentBlockhash=i.blockhash,o.lastValidBlockHeight=i.lastValidBlockHeight;let g=o._compile().serialize(),v=o._serialize(g).toString("base64");s.push(v)}let a=s.map(o=>{let l=t._buildArgs([o],void 0,"base64");return{methodName:"simulateTransaction",args:l}}),u=[],c=20;for(let o=0;o<Math.ceil(a.length/c);o++)u.push(a.slice(o*c,(o+1)*c));n=await(await Promise.all(u.map(async o=>(await t._rpcBatchRequest(o)).map(l=>l.result.value)))).flat()}else try{n=await Promise.all(e.map(async i=>await(await t.simulateTransaction(i)).value))}catch(i){i instanceof Error&&m.logWithError("failed to get info for multiple accounts","RPC_ERROR",{message:i.message})}return n}function re({instructions:t,payer:e,signers:r}){return B(t,[e,...r])}function oe({instructions:t,payer:e,lookupTableAddressAccount:r,recentBlockhash:n=P.generate().publicKey.toString()}){let s=new E({payerKey:e,recentBlockhash:n,instructions:t}).compileToV0Message(Object.values(r??{}));try{return Buffer.from(new C(s).serialize()).toString("base64").length<T}catch{return!1}}var f={time:0,data:void 0};async function ne(t){if(!f.data||(Date.now()-f.time)/1e3>30){let e=await t.getEpochInfo();return f={time:Date.now(),data:e},e}else return f.data}var I=t=>Buffer.isBuffer(t)?t:t instanceof Uint8Array?Buffer.from(t.buffer,t.byteOffset,t.byteLength):Buffer.from(t),W=t=>{let e=t.serialize({requireAllSignatures:!1,verifySignatures:!1});t instanceof C&&(e=I(e));try{return e instanceof Buffer?e.toString("base64"):Buffer.from(e).toString("base64")}catch{return e.toString("base64")}};function ie(t){let e=[];return t.forEach(r=>{r instanceof p&&(r.recentBlockhash||(r.recentBlockhash=F.toBase58()),r.feePayer||(r.feePayer=P.generate().publicKey)),e.push(W(r))}),console.log("simulate tx string:",e),e}function ae(t){let e=t.serialize({requireAllSignatures:!1,verifySignatures:!1});return t instanceof C&&(e=I(e)),e.toString("base64")}export{T as MAX_BASE64_SIZE,J as addComputeBudget,re as checkLegacyTxSize,oe as checkV0TxSize,Y as confirmTransaction,te as findProgramAddress,B as forecastTransactionSize,ne as getEpochInfo,X as getRecentBlockHash,Q as parseSimulateLogToJson,ee as parseSimulateValue,ie as printSimulate,Z as simulateMultipleInstruction,x as simulateTransaction,I as toBuffer,ae as transformTxToBase64,W as txToBase64};
//# sourceMappingURL=txUtils.mjs.map