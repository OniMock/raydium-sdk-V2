{"version":3,"sources":["../../../src/raydium/farm/config.ts","../../../src/common/logger.ts","../../../src/common/programId.ts","../../../src/marshmallow/index.ts","../../../src/marshmallow/buffer-layout.ts","../../../src/raydium/farm/layout.ts"],"sourceRoot":"../src","sourcesContent":["import { PublicKey } from \"@solana/web3.js\";\r\n\r\nimport { ApiV3Token } from \"../../api/type\";\r\nimport { createLogger } from \"../../common/logger\";\r\nimport { FARM_PROGRAM_ID_V3, FARM_PROGRAM_ID_V4, FARM_PROGRAM_ID_V5, FARM_PROGRAM_ID_V6 } from \"../../common/programId\";\r\n\r\nimport {\r\n  FarmLedgerLayout,\r\n  farmLedgerLayoutV3_2,\r\n  farmLedgerLayoutV5_2,\r\n  farmLedgerLayoutV6_1,\r\n  FarmStateLayout,\r\n  farmStateV3Layout,\r\n  farmStateV5Layout,\r\n  farmStateV6Layout,\r\n} from \"./layout\";\r\n\r\nconst logger = createLogger(\"Raydium_farm_config\");\r\n\r\nexport type FarmVersion = 3 | 4 | 5 | 6;\r\nexport const FARM_LOCK_MINT = new PublicKey(\"4k3Dyjzvzp8eMZWUXbBCjEvwSkkk59S5iCNLY3QrkX6R\");\r\nexport const FARM_LOCK_VAULT = new PublicKey(\"FrspKwj8i3pNmKwXreTveC4fu7KL5ZbGeXdZBe2XViu1\");\r\n\r\n/* ================= index ================= */\r\n// version => farm state layout\r\nexport const FARM_VERSION_TO_STATE_LAYOUT: {\r\n  [version in FarmVersion]?: FarmStateLayout;\r\n} = {\r\n  3: farmStateV3Layout,\r\n  5: farmStateV5Layout,\r\n  6: farmStateV6Layout,\r\n};\r\n\r\n// version => farm ledger layout\r\nexport const FARM_VERSION_TO_LEDGER_LAYOUT: {\r\n  [version in FarmVersion]?: FarmLedgerLayout;\r\n} = {\r\n  3: farmLedgerLayoutV3_2,\r\n  5: farmLedgerLayoutV5_2,\r\n  6: farmLedgerLayoutV6_1,\r\n};\r\n\r\nexport const isValidFarmVersion = (version: number): boolean => [3, 4, 5, 6].indexOf(version) !== -1;\r\n\r\nexport const validateFarmRewards = (params: {\r\n  version: number;\r\n  rewardInfos: { mint: ApiV3Token }[];\r\n  rewardTokenAccountsPublicKeys: PublicKey[];\r\n}): (() => string | undefined) => {\r\n  const { version, rewardInfos, rewardTokenAccountsPublicKeys } = params;\r\n\r\n  const infoMsg = `rewardInfo:${JSON.stringify(rewardInfos)}, rewardAccount:${JSON.stringify(\r\n    rewardTokenAccountsPublicKeys,\r\n  )}`;\r\n\r\n  const validator = {\r\n    3: (): string | undefined => {\r\n      if (rewardInfos.length !== 1 || rewardTokenAccountsPublicKeys.length !== 1) {\r\n        return `rewardInfos or rewardTokenAccounts lengths not equal 1: ${infoMsg}`;\r\n      }\r\n    },\r\n    5: (): string | undefined => {\r\n      if (rewardInfos.length !== rewardTokenAccountsPublicKeys.length) {\r\n        return `rewardInfos and rewardTokenAccounts lengths not equal: ${infoMsg}`;\r\n      }\r\n    },\r\n    6: (): string | undefined => {\r\n      if (!rewardTokenAccountsPublicKeys.length || rewardInfos.length !== rewardTokenAccountsPublicKeys.length) {\r\n        return `no rewardTokenAccounts or rewardInfos and rewardTokenAccounts lengths not equal: ${infoMsg}`;\r\n      }\r\n    },\r\n  };\r\n\r\n  return validator[version]?.();\r\n};\r\n\r\nexport const poolTypeV6 = { \"Standard SPL\": 0, \"Option tokens\": 1 };\r\n\r\nexport const FARM_PROGRAM_TO_VERSION: Record<string, 3 | 4 | 5 | 6> = {\r\n  [FARM_PROGRAM_ID_V3.toString()]: 3,\r\n  [FARM_PROGRAM_ID_V4.toString()]: 4,\r\n  [FARM_PROGRAM_ID_V5.toString()]: 5,\r\n  [FARM_PROGRAM_ID_V6.toString()]: 6,\r\n};\r\n","import { get, set } from \"lodash\";\r\n\r\nexport type ModuleName = \"Common.Api\";\r\n\r\nexport enum LogLevel {\r\n  Error,\r\n  Warning,\r\n  Info,\r\n  Debug,\r\n}\r\nexport class Logger {\r\n  private logLevel: LogLevel;\r\n  private name: string;\r\n  constructor(params: { name: string; logLevel?: LogLevel }) {\r\n    this.logLevel = params.logLevel !== undefined ? params.logLevel : LogLevel.Error;\r\n    this.name = params.name;\r\n  }\r\n\r\n  set level(logLevel: LogLevel) {\r\n    this.logLevel = logLevel;\r\n  }\r\n  get time(): string {\r\n    return Date.now().toString();\r\n  }\r\n  get moduleName(): string {\r\n    return this.name;\r\n  }\r\n\r\n  private isLogLevel(level: LogLevel): boolean {\r\n    return level <= this.logLevel;\r\n  }\r\n\r\n  public error(...props): Logger {\r\n    if (!this.isLogLevel(LogLevel.Error)) return this;\r\n    console.error(this.time, this.name, \"sdk logger error\", ...props);\r\n    return this;\r\n  }\r\n\r\n  public logWithError(...props): Logger {\r\n    // this.error(...props)\r\n    const msg = props.map((arg) => (typeof arg === \"object\" ? JSON.stringify(arg) : arg)).join(\", \");\r\n    throw new Error(msg);\r\n  }\r\n\r\n  public warning(...props): Logger {\r\n    if (!this.isLogLevel(LogLevel.Warning)) return this;\r\n    console.warn(this.time, this.name, \"sdk logger warning\", ...props);\r\n    return this;\r\n  }\r\n\r\n  public info(...props): Logger {\r\n    if (!this.isLogLevel(LogLevel.Info)) return this;\r\n    console.info(this.time, this.name, \"sdk logger info\", ...props);\r\n    return this;\r\n  }\r\n\r\n  public debug(...props): Logger {\r\n    if (!this.isLogLevel(LogLevel.Debug)) return this;\r\n    console.debug(this.time, this.name, \"sdk logger debug\", ...props);\r\n    return this;\r\n  }\r\n}\r\n\r\nconst moduleLoggers: { [key in ModuleName]?: Logger } = {};\r\nconst moduleLevels: { [key in ModuleName]?: LogLevel } = {};\r\n\r\nexport function createLogger(moduleName: string): Logger {\r\n  let logger = get(moduleLoggers, moduleName);\r\n  if (!logger) {\r\n    // default level is error\r\n    const logLevel = get(moduleLevels, moduleName);\r\n\r\n    logger = new Logger({ name: moduleName, logLevel });\r\n    set(moduleLoggers, moduleName, logger);\r\n  }\r\n\r\n  return logger;\r\n}\r\n\r\nexport function setLoggerLevel(moduleName: string, level: LogLevel): void {\r\n  set(moduleLevels, moduleName, level);\r\n\r\n  const logger = get(moduleLoggers, moduleName);\r\n  if (logger) logger.level = level;\r\n}\r\n","import { PublicKey } from \"@solana/web3.js\";\r\n\r\n// raydium\r\nexport const FARM_PROGRAM_ID_V3 = new PublicKey(\"EhhTKczWMGQt46ynNeRX1WfeagwwJd7ufHvCDjRxjo5Q\");\r\n// temp fusion\r\nexport const FARM_PROGRAM_ID_V4 = new PublicKey(\"CBuCnLe26faBpcBP2fktp4rp8abpcAnTWft6ZrP5Q4T\");\r\n// \"fusion\"\r\nexport const FARM_PROGRAM_ID_V5 = new PublicKey(\"9KEPoZmtHUrBbhWN1v1KWLMkkvwY6WLtAVUCPRtRjP4z\");\r\n// echosystem\r\nexport const FARM_PROGRAM_ID_V6 = new PublicKey(\"FarmqiPv5eAj3j1GMdMCMUGXqPUvmquZtMy86QH6rzhG\");\r\n\r\nexport const UTIL1216 = new PublicKey(\"CLaimxFqjHzgTJtAGHU47NPhg6qrc5sCnpC4tBLyABQS\");\r\n\r\nexport const OPEN_BOOK_PROGRAM = new PublicKey(\"srmqPvymJeFKQ4zGQed1GFppgkRHL9kaELCbyksJtPX\");\r\nexport const SERUM_PROGRAM_ID_V3 = new PublicKey(\"9xQeWvG816bUx9EPjHmaT23yvVM2ZWbrrpZb9PusVFin\");\r\n\r\nexport const AMM_V4 = new PublicKey(\"675kPX9MHTjS2zt1qfr1NYHuzeLXfQM9H24wFSUt1Mp8\");\r\nexport const AMM_STABLE = new PublicKey(\"5quBtoiQqxF9Jv6KYKctB59NT3gtJD2Y65kdnB1Uev3h\");\r\nexport const LIQUIDITY_POOL_PROGRAM_ID_V5_MODEL = new PublicKey(\"CDSr3ssLcRB6XYPJwAfFt18MZvEZp4LjHcvzBVZ45duo\");\r\nexport const CLMM_PROGRAM_ID = new PublicKey(\"CAMMCzo5YL8w4VFF8KVHrK22GGUsp5VTaW7grrKgrWqK\");\r\nexport const CLMM_LOCK_PROGRAM_ID = new PublicKey(\"LockrWmn6K5twhz3y9w1dQERbmgSaRkfnTeTKbpofwE\");\r\nexport const CLMM_LOCK_AUTH_ID = new PublicKey(\"kN1kEznaF5Xbd8LYuqtEFcxzWSBk5Fv6ygX6SqEGJVy\");\r\n\r\nexport const Router = new PublicKey(\"routeUGWgWzqBWFcrCfv8tritsqukccJPu3q5GPP3xS\");\r\nexport const FEE_DESTINATION_ID = new PublicKey(\"7YttLkHDoNj9wyDur5pM1ejNaAvT9X4eqaYcHQqtj2G5\");\r\n\r\nexport const IDO_PROGRAM_ID_V1 = new PublicKey(\"6FJon3QE27qgPVggARueB22hLvoh22VzJpXv4rBEoSLF\");\r\nexport const IDO_PROGRAM_ID_V2 = new PublicKey(\"CC12se5To1CdEuw7fDS27B7Geo5jJyL7t5UK2B44NgiH\");\r\nexport const IDO_PROGRAM_ID_V3 = new PublicKey(\"9HzJyW1qZsEiSfMUf6L2jo3CcTKAyBmSyKdwQeYisHrC\");\r\nexport const IDO_PROGRAM_ID_V4 = new PublicKey(\"DropEU8AvevN3UrXWXTMuz3rqnMczQVNjq3kcSdW2SQi\");\r\n\r\nexport const CREATE_CPMM_POOL_PROGRAM = new PublicKey(\"CPMMoo8L3F4NbTegBCKVNunggL7H1ZpdTHKxQB5qKP1C\");\r\nexport const CREATE_CPMM_POOL_AUTH = new PublicKey(\"GpMZbSM2GgvTKHJirzeGfMFoaZ8UR2X7F4v8vHTvxFbL\");\r\nexport const CREATE_CPMM_POOL_FEE_ACC = new PublicKey(\"DNXgeM9EiiaAbaWvwjHj9fQQLAX5ZsfHyvmYUNRAdNC8\");\r\n\r\nexport const DEV_CREATE_CPMM_POOL_PROGRAM = new PublicKey(\"CPMDWBwJDtYax9qW7AyRuVC19Cc4L4Vcy4n2BHAbHkCW\");\r\nexport const DEV_CREATE_CPMM_POOL_AUTH = new PublicKey(\"7rQ1QFNosMkUCuh7Z7fPbTHvh73b68sQYdirycEzJVuw\");\r\nexport const DEV_CREATE_CPMM_POOL_FEE_ACC = new PublicKey(\"G11FKBRaAkHAKuLCgLM6K6NUc9rTjPAznRCjZifrTQe2\");\r\n\r\nexport const LOCK_CPMM_PROGRAM = new PublicKey(\"LockrWmn6K5twhz3y9w1dQERbmgSaRkfnTeTKbpofwE\");\r\nexport const DEV_LOCK_CPMM_PROGRAM = new PublicKey(\"DLockwT7X7sxtLmGH9g5kmfcjaBtncdbUmi738m5bvQC\");\r\n\r\nexport const LOCK_CPMM_AUTH = new PublicKey(\"3f7GcQFG397GAaEnv51zR6tsTVihYRydnydDD1cXekxH\");\r\nexport const DEV_LOCK_CPMM_AUTH = new PublicKey(\"7AFUeLVRjBfzqK3tTGw8hN48KLQWSk6DTE8xprWdPqix\");\r\n\r\nexport const LAUNCHPAD_PROGRAM = new PublicKey(\"LanMV9sAd7wArD4vJFi2qDdfnVhFxYSUg6eADduJ3uj\");\r\nexport const LAUNCHPAD_AUTH = new PublicKey(\"WLHv2UAZm6z4KyaaELi5pjdbJh6RESMva1Rnn8pJVVh\");\r\n\r\nexport const DEV_LAUNCHPAD_PROGRAM = new PublicKey(\"LanD8FpTBBvzZFXjTxsAoipkFsxPUCDB4qAqKxYDiNP\");\r\nexport const DEV_LAUNCHPAD_AUTH = new PublicKey(\"HYNHiyKJ3gGVFvyxJAurK7qr7P2o5J9THmvCGMdULtpW\");\r\n\r\nexport const IDO_ALL_PROGRAM = {\r\n  IDO_PROGRAM_ID_V1,\r\n  IDO_PROGRAM_ID_V2,\r\n  IDO_PROGRAM_ID_V3,\r\n  IDO_PROGRAM_ID_V4,\r\n};\r\n\r\nexport const ALL_PROGRAM_ID = {\r\n  AMM_V4,\r\n  AMM_STABLE,\r\n  CLMM_PROGRAM_ID,\r\n  CLMM_LOCK_PROGRAM_ID,\r\n  CLMM_LOCK_AUTH_ID,\r\n\r\n  FARM_PROGRAM_ID_V3,\r\n  FARM_PROGRAM_ID_V5,\r\n  FARM_PROGRAM_ID_V6,\r\n\r\n  OPEN_BOOK_PROGRAM,\r\n  SERUM_PROGRAM_ID_V3,\r\n\r\n  UTIL1216,\r\n\r\n  Router,\r\n\r\n  CREATE_CPMM_POOL_PROGRAM,\r\n  CREATE_CPMM_POOL_AUTH,\r\n  CREATE_CPMM_POOL_FEE_ACC,\r\n\r\n  LOCK_CPMM_PROGRAM,\r\n  LOCK_CPMM_AUTH,\r\n\r\n  LAUNCHPAD_PROGRAM,\r\n  LAUNCHPAD_AUTH,\r\n};\r\n\r\nexport type ProgramIdConfig = Partial<typeof ALL_PROGRAM_ID>;\r\n\r\nexport const DEVNET_PROGRAM_ID = {\r\n  SERUM_MARKET: PublicKey.default,\r\n  OPENBOOK_MARKET: new PublicKey(\"EoTcMgcDRTJVZDMZWBoU6rhYHZfkNTVEAfz3uUJRcYGj\"),\r\n\r\n  UTIL1216: PublicKey.default,\r\n\r\n  FarmV3: new PublicKey(\"85BFyr98MbCUU9MVTEgzx1nbhWACbJqLzho6zd6DZcWL\"),\r\n  FarmV5: new PublicKey(\"EcLzTrNg9V7qhcdyXDe2qjtPkiGzDM2UbdRaeaadU5r2\"),\r\n  FarmV6: new PublicKey(\"Farm2hJLcqPtPg8M4rR6DMrsRNc5TPm5Cs4bVQrMe2T7\"),\r\n\r\n  AmmV4: new PublicKey(\"HWy1jotHpo6UqeQxx49dpYYdQB8wj9Qk9MdxwjLvDHB8\"),\r\n  AmmStable: new PublicKey(\"DDg4VmQaJV9ogWce7LpcjBA9bv22wRp5uaTPa5pGjijF\"),\r\n\r\n  CLMM: new PublicKey(\"devi51mZmdwUJGU9hjN27vEz64Gps7uUefqxg27EAtH\"),\r\n  CLMM_LOCK_PROGRAM_ID: new PublicKey(\"DLockwT7X7sxtLmGH9g5kmfcjaBtncdbUmi738m5bvQC\"),\r\n  CLMM_LOCK_AUTH_ID: new PublicKey(\"8qmHNvu2Kr2C7U8mJL4Vz1vTDxMhVuXKREwU7TNoaVEo\"),\r\n\r\n  Router: new PublicKey(\"BVChZ3XFEwTMUk1o9i3HAf91H6mFxSwa5X2wFAWhYPhU\"),\r\n\r\n  CREATE_CPMM_POOL_PROGRAM: DEV_CREATE_CPMM_POOL_PROGRAM,\r\n  CREATE_CPMM_POOL_AUTH: DEV_CREATE_CPMM_POOL_AUTH,\r\n  CREATE_CPMM_POOL_FEE_ACC: DEV_CREATE_CPMM_POOL_FEE_ACC,\r\n\r\n  FEE_DESTINATION_ID: new PublicKey(\"3XMrhbv989VxAMi3DErLV9eJht1pHppW5LbKxe9fkEFR\"),\r\n\r\n  LOCK_CPMM_PROGRAM: DEV_LOCK_CPMM_PROGRAM,\r\n  LCOK_CPMM_AUTH: DEV_LOCK_CPMM_AUTH,\r\n\r\n  LAUNCHPAD_PROGRAM: DEV_LAUNCHPAD_PROGRAM,\r\n  LAUNCHPAD_AUTH: DEV_LAUNCHPAD_AUTH,\r\n};\r\n","import { PublicKey } from \"@solana/web3.js\";\r\nimport BN, { isBN } from \"bn.js\";\r\n\r\nimport {\r\n  bits,\r\n  blob,\r\n  Blob,\r\n  Layout,\r\n  offset as _offset,\r\n  seq as _seq,\r\n  Structure as _Structure,\r\n  u32 as _u32,\r\n  u8 as _u8,\r\n  UInt,\r\n  union as _union,\r\n  Union as _Union,\r\n} from \"./buffer-layout\";\r\n\r\nexport * from \"./buffer-layout\";\r\nexport { blob };\r\n\r\nexport class BNLayout<P extends string = \"\"> extends Layout<BN, P> {\r\n  blob: Layout<Buffer>;\r\n  signed: boolean;\r\n\r\n  constructor(span: number, signed: boolean, property?: P) {\r\n    //@ts-expect-error type wrong for super()'s type different from extends, but it desn't matter\r\n    super(span, property);\r\n    this.blob = blob(span);\r\n    this.signed = signed;\r\n  }\r\n\r\n  /** @override */\r\n  decode(b: Buffer, offset = 0): BN {\r\n    const num = new BN(this.blob.decode(b, offset), 10, \"le\");\r\n    if (this.signed) {\r\n      return num.fromTwos(this.span * 8).clone();\r\n    }\r\n    return num;\r\n  }\r\n\r\n  /** @override */\r\n  encode(src: BN, b: Buffer, offset = 0): number {\r\n    if (typeof src === \"number\") src = new BN(src); // src will pass a number accidently in union\r\n    if (this.signed) {\r\n      src = src.toTwos(this.span * 8);\r\n    }\r\n    return this.blob.encode(src.toArrayLike(Buffer, \"le\", this.span), b, offset);\r\n  }\r\n}\r\n\r\nexport class WideBits<P extends string = \"\"> extends Layout<Record<string, boolean>, P> {\r\n  _lower: any;\r\n  _upper: any;\r\n  // TODO: unknown\r\n  constructor(property?: P) {\r\n    //@ts-expect-error type wrong for super()'s type different from extends , but it desn't matter\r\n    super(8, property);\r\n    this._lower = bits(_u32(), false);\r\n    this._upper = bits(_u32(), false);\r\n  }\r\n\r\n  addBoolean(property: string): void {\r\n    if (this._lower.fields.length < 32) {\r\n      this._lower.addBoolean(property);\r\n    } else {\r\n      this._upper.addBoolean(property);\r\n    }\r\n  }\r\n\r\n  decode(b: Buffer, offset = 0): Record<string, boolean> {\r\n    const lowerDecoded = this._lower.decode(b, offset);\r\n    const upperDecoded = this._upper.decode(b, offset + this._lower.span);\r\n    return { ...lowerDecoded, ...upperDecoded };\r\n  }\r\n\r\n  encode(src: any /* TEMP */, b: Buffer, offset = 0): any {\r\n    return this._lower.encode(src, b, offset) + this._upper.encode(src, b, offset + this._lower.span);\r\n  }\r\n}\r\n\r\nexport function u8<P extends string = \"\">(property?: P): UInt<number, P> {\r\n  return new UInt(1, property);\r\n}\r\n\r\nexport function u32<P extends string = \"\">(property?: P): UInt<number, P> {\r\n  return new UInt(4, property);\r\n}\r\n\r\nexport function u64<P extends string = \"\">(property?: P): BNLayout<P> {\r\n  return new BNLayout(8, false, property);\r\n}\r\n\r\nexport function u128<P extends string = \"\">(property?: P): BNLayout<P> {\r\n  return new BNLayout(16, false, property);\r\n}\r\n\r\nexport function i8<P extends string = \"\">(property?: P): BNLayout<P> {\r\n  return new BNLayout(1, true, property);\r\n}\r\n\r\nexport function i64<P extends string = \"\">(property?: P): BNLayout<P> {\r\n  return new BNLayout(8, true, property);\r\n}\r\n\r\nexport function i128<P extends string = \"\">(property?: P): BNLayout<P> {\r\n  return new BNLayout(16, true, property);\r\n}\r\n\r\nexport class WrappedLayout<T, U, P extends string = \"\"> extends Layout<U, P> {\r\n  layout: Layout<T>;\r\n  decoder: (data: T) => U;\r\n  encoder: (src: U) => T;\r\n\r\n  constructor(layout: Layout<T>, decoder: (data: T) => U, encoder: (src: U) => T, property?: P) {\r\n    //@ts-expect-error type wrong for super()'s type different from extends , but it desn't matter\r\n    super(layout.span, property);\r\n    this.layout = layout;\r\n    this.decoder = decoder;\r\n    this.encoder = encoder;\r\n  }\r\n\r\n  decode(b: Buffer, offset?: number): U {\r\n    return this.decoder(this.layout.decode(b, offset));\r\n  }\r\n\r\n  encode(src: U, b: Buffer, offset?: number): number {\r\n    return this.layout.encode(this.encoder(src), b, offset);\r\n  }\r\n\r\n  getSpan(b: Buffer, offset?: number): number {\r\n    return this.layout.getSpan(b, offset);\r\n  }\r\n}\r\n\r\nexport function publicKey<P extends string = \"\">(property?: P): Layout<PublicKey, P> {\r\n  return new WrappedLayout(\r\n    blob(32),\r\n    (b: Buffer) => new PublicKey(b),\r\n    (key: PublicKey) => key.toBuffer(),\r\n    property,\r\n  );\r\n}\r\n\r\nexport class OptionLayout<T, P> extends Layout<T | null, P> {\r\n  layout: Layout<T>;\r\n  discriminator: Layout<number>;\r\n\r\n  constructor(layout: Layout<T>, property?: P) {\r\n    //@ts-expect-error type wrong for super()'s type different from extends , but it desn't matter\r\n    super(-1, property);\r\n    this.layout = layout;\r\n    this.discriminator = _u8();\r\n  }\r\n\r\n  encode(src: T | null, b: Buffer, offset = 0): number {\r\n    if (src === null || src === undefined) {\r\n      return this.discriminator.encode(0, b, offset);\r\n    }\r\n    this.discriminator.encode(1, b, offset);\r\n    return this.layout.encode(src, b, offset + 1) + 1;\r\n  }\r\n\r\n  decode(b: Buffer, offset = 0): T | null {\r\n    const discriminator = this.discriminator.decode(b, offset);\r\n    if (discriminator === 0) {\r\n      return null;\r\n    } else if (discriminator === 1) {\r\n      return this.layout.decode(b, offset + 1);\r\n    }\r\n    throw new Error(\"Invalid option \" + this.property);\r\n  }\r\n\r\n  getSpan(b: Buffer, offset = 0): number {\r\n    const discriminator = this.discriminator.decode(b, offset);\r\n    if (discriminator === 0) {\r\n      return 1;\r\n    } else if (discriminator === 1) {\r\n      return this.layout.getSpan(b, offset + 1) + 1;\r\n    }\r\n    throw new Error(\"Invalid option \" + this.property);\r\n  }\r\n}\r\n\r\nexport function option<T, P extends string = \"\">(layout: Layout<T>, property?: P): Layout<T | null, P> {\r\n  return new OptionLayout<T, P>(layout, property);\r\n}\r\n\r\nexport function bool<P extends string = \"\">(property?: P): Layout<boolean, P> {\r\n  return new WrappedLayout(_u8(), decodeBool, encodeBool, property);\r\n}\r\n\r\nexport function decodeBool(value: number): boolean {\r\n  if (value === 0) {\r\n    return false;\r\n  } else if (value === 1) {\r\n    return true;\r\n  }\r\n  throw new Error(\"Invalid bool: \" + value);\r\n}\r\n\r\nexport function encodeBool(value: boolean): number {\r\n  return value ? 1 : 0;\r\n}\r\n\r\nexport function vec<T, P extends string = \"\">(elementLayout: Layout<T>, property?: P): Layout<T[], P> {\r\n  const length = _u32(\"length\");\r\n  const layout: Layout<{ values: T[] }> = struct([\r\n    length,\r\n    seq(elementLayout, _offset(length, -length.span), \"values\"),\r\n  ]) as any; // Something I don't know\r\n  return new WrappedLayout(\r\n    layout,\r\n    ({ values }) => values,\r\n    (values) => ({ values }),\r\n    property,\r\n  );\r\n}\r\n\r\nexport function tagged<T, P extends string = \"\">(tag: BN, layout: Layout<T>, property?: P): Layout<T, P> {\r\n  const wrappedLayout: Layout<{ tag: BN; data: T }> = struct([u64(\"tag\"), layout.replicate(\"data\")]) as any; // Something I don't know\r\n\r\n  function decodeTag({ tag: receivedTag, data }: { tag: BN; data: T }): T {\r\n    if (!receivedTag.eq(tag)) {\r\n      throw new Error(\"Invalid tag, expected: \" + tag.toString(\"hex\") + \", got: \" + receivedTag.toString(\"hex\"));\r\n    }\r\n    return data;\r\n  }\r\n\r\n  return new WrappedLayout(wrappedLayout, decodeTag, (data) => ({ tag, data }), property);\r\n}\r\n\r\nexport function vecU8<P extends string = \"\">(property?: P): Layout<Buffer, P> {\r\n  const length = _u32(\"length\");\r\n  const layout: Layout<{ data: Buffer }> = struct([length, blob(_offset(length, -length.span), \"data\")]) as any; // Something I don't know\r\n  return new WrappedLayout(\r\n    layout,\r\n    ({ data }) => data,\r\n    (data) => ({ data }),\r\n    property,\r\n  );\r\n}\r\n\r\nexport function str<P extends string = \"\">(property?: P): Layout<string, P> {\r\n  return new WrappedLayout(\r\n    vecU8(),\r\n    (data) => data.toString(\"utf-8\"),\r\n    (s) => Buffer.from(s, \"utf-8\"),\r\n    property,\r\n  );\r\n}\r\n\r\nexport interface EnumLayout<T, P extends string = \"\"> extends Layout<T, P> {\r\n  registry: Record<string, Layout<any>>;\r\n}\r\n\r\nexport function rustEnum<T, P extends string = \"\">(variants: Layout<any>[], property?: P): EnumLayout<T, P> {\r\n  const unionLayout = _union(_u8(), property);\r\n  variants.forEach((variant, index) => unionLayout.addVariant(index, variant, variant.property));\r\n  return unionLayout as any; // ?why use UnionLayout? This must be a fault\r\n}\r\n\r\nexport function array<T, P extends string = \"\">(\r\n  elementLayout: Layout<T>,\r\n  length: number,\r\n  property?: P,\r\n): Layout<T[], P> {\r\n  const layout = struct([seq(elementLayout, length, \"values\")]) as any as Layout<{ values: T[] }>; // Something I don't know\r\n  return new WrappedLayout(\r\n    layout,\r\n    ({ values }) => values,\r\n    (values) => ({ values }),\r\n    property,\r\n  );\r\n}\r\n\r\nexport class Structure<T, P, D extends { [key: string]: any; }> extends _Structure<T, P, D> {\r\n  /** @override */\r\n  decode(b: Buffer, offset?: number): D {\r\n    return super.decode(b, offset);\r\n  }\r\n}\r\n\r\nexport function struct<T, P extends string = \"\">(\r\n  fields: T,\r\n  property?: P,\r\n  decodePrefixes?: boolean,\r\n): T extends Layout<infer Value, infer Property>[]\r\n  ? Structure<\r\n    Value,\r\n    P,\r\n    {\r\n      [K in Exclude<Extract<Property, string>, \"\">]: Extract<T[number], Layout<any, K>> extends Layout<infer V, any>\r\n      ? V\r\n      : any;\r\n    }\r\n  >\r\n  : any {\r\n  //@ts-expect-error this type is not quite satisfied the define, but, never no need to worry about.\r\n  return new Structure(fields, property, decodePrefixes);\r\n}\r\n\r\nexport type GetLayoutSchemaFromStructure<T extends Structure<any, any, any>> = T extends Structure<any, any, infer S>\r\n  ? S\r\n  : any;\r\nexport type GetStructureFromLayoutSchema<S extends { [key: string]: any; }> = Structure<any, any, S>;\r\n\r\nexport class Union<Schema extends { [key: string]: any; }> extends _Union<Schema> {\r\n  encodeInstruction(instruction: any): Buffer {\r\n    const instructionMaxSpan = Math.max(...Object.values(this.registry).map((r) => r.span));\r\n    const b = Buffer.alloc(instructionMaxSpan);\r\n    return b.slice(0, this.encode(instruction, b));\r\n  }\r\n\r\n  decodeInstruction(instruction: any): Partial<Schema> {\r\n    return this.decode(instruction);\r\n  }\r\n}\r\nexport function union<UnionSchema extends { [key: string]: any } = any>(\r\n  discr: any,\r\n  defaultLayout?: any,\r\n  property?: string,\r\n): Union<UnionSchema> {\r\n  return new Union(discr, defaultLayout, property);\r\n}\r\n\r\nclass Zeros extends Blob {\r\n  decode(b: Buffer, offset: number): Buffer {\r\n    const slice = super.decode(b, offset);\r\n    if (!slice.every((v) => v === 0)) {\r\n      throw new Error(\"nonzero padding bytes\");\r\n    }\r\n    return slice;\r\n  }\r\n}\r\n\r\nexport function zeros(length: number): Zeros {\r\n  return new Zeros(length);\r\n}\r\n\r\nexport function seq<T, P extends string = \"\", AnotherP extends string = \"\">(\r\n  elementLayout: Layout<T, P>,\r\n  count: number | BN | Layout<BN | number, P>,\r\n  property?: AnotherP,\r\n): Layout<T[], AnotherP> {\r\n  let parsedCount: number;\r\n  const superCount =\r\n    typeof count === \"number\"\r\n      ? count\r\n      : isBN(count)\r\n        ? count.toNumber()\r\n        : new Proxy(count as unknown as Layout<number> /* pretend to be Layout<number> */, {\r\n          get(target, property): any {\r\n            if (!parsedCount) {\r\n              // get count in targetLayout. note that count may be BN\r\n              const countProperty = Reflect.get(target, \"count\");\r\n\r\n              // let targetLayout's  property:count be a number\r\n              parsedCount = isBN(countProperty) ? countProperty.toNumber() : countProperty;\r\n\r\n              // record the count\r\n              Reflect.set(target, \"count\", parsedCount);\r\n            }\r\n            return Reflect.get(target, property);\r\n          },\r\n          set(target, property, value): any {\r\n            if (property === \"count\") {\r\n              parsedCount = value;\r\n            }\r\n            return Reflect.set(target, property, value);\r\n          },\r\n        });\r\n\r\n  // @ts-expect-error force type\r\n  return _seq(elementLayout, superCount, property);\r\n}\r\n","import {\r\n  bits as _bits,\r\n  BitStructure as _BitStructure,\r\n  blob as _blob,\r\n  Blob as _Blob,\r\n  cstr as _cstr,\r\n  f32 as _f32,\r\n  f32be as _f32be,\r\n  f64 as _f64,\r\n  f64be as _f64be,\r\n  greedy as _greedy,\r\n  Layout as _Layout,\r\n  ns64 as _ns64,\r\n  ns64be as _ns64be,\r\n  nu64 as _nu64,\r\n  nu64be as _nu64be,\r\n  offset as _offset,\r\n  s16 as _s16,\r\n  s16be as _s16be,\r\n  s24 as _s24,\r\n  s24be as _s24be,\r\n  s32 as _s32,\r\n  s32be as _s32be,\r\n  s40 as _s40,\r\n  s40be as _s40be,\r\n  s48 as _s48,\r\n  s48be as _s48be,\r\n  s8 as _s8,\r\n  seq as _seq,\r\n  struct as _struct,\r\n  Structure as _Structure,\r\n  u16 as _u16,\r\n  u16be as _u16be,\r\n  u24 as _u24,\r\n  u24be as _u24be,\r\n  u32 as _u32,\r\n  u32be as _u32be,\r\n  u40 as _u40,\r\n  u40be as _u40be,\r\n  u48 as _u48,\r\n  u48be as _u48be,\r\n  u8 as _u8,\r\n  UInt as _UInt,\r\n  union as _union,\r\n  Union as _Union,\r\n  unionLayoutDiscriminator as _unionLayoutDiscriminator,\r\n  utf8 as _utf8,\r\n} from \"@solana/buffer-layout\";\r\n\r\n//#region ------------------- Layout -------------------\r\nexport interface Layout<T = any, P = \"\"> {\r\n  span: number;\r\n  property?: P;\r\n  decode(b: Buffer, offset?: number): T;\r\n  encode(src: T, b: Buffer, offset?: number): number;\r\n  getSpan(b: Buffer, offset?: number): number;\r\n  replicate<AP extends string>(name: AP): Layout<T, AP>;\r\n}\r\nexport interface LayoutConstructor {\r\n  new <T, P>(): Layout<T, P>; // for class extends syntex\r\n  new <T, P>(span?: T, property?: P): Layout<T, P>;\r\n  readonly prototype: Layout;\r\n}\r\nexport const Layout = _Layout as unknown as LayoutConstructor;\r\n//#endregion\r\n\r\n//#region ------------------- Structure -------------------\r\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\nexport interface Structure<T = any, P = \"\", DecodeSchema extends { [key: string]: any } = any>\r\n  extends Layout<DecodeSchema, P> {\r\n  span: number;\r\n  decode(b: Buffer, offset?: number): DecodeSchema;\r\n  layoutFor<AP extends string>(property: AP): Layout<DecodeSchema[AP]>;\r\n  offsetOf<AP extends string>(property: AP): number;\r\n}\r\ninterface StructureConstructor {\r\n  new <T = any, P = \"\", DecodeSchema extends { [key: string]: any } = any>(): Structure<T, P, DecodeSchema>;\r\n  new <T = any, P = \"\", DecodeSchema extends { [key: string]: any } = any>(\r\n    fields: T,\r\n    property?: P,\r\n    decodePrefixes?: boolean,\r\n  ): Structure<T, P, DecodeSchema>;\r\n}\r\nexport const Structure = _Structure as unknown as StructureConstructor;\r\n//#endregion\r\n\r\n//#region ------------------- Union -------------------\r\nexport interface Union<UnionSchema extends { [key: string]: any } = any> extends Layout {\r\n  registry: object;\r\n  decode(b: Buffer, offset?: number): Partial<UnionSchema>;\r\n  addVariant(\r\n    variant: number,\r\n    layout: Structure<any, any, Partial<UnionSchema>> | Layout<any, keyof UnionSchema>,\r\n    property?: string,\r\n  ): any /* TEMP: code in Layout.js 1809 */;\r\n}\r\ninterface UnionConstructor {\r\n  new <UnionSchema extends { [key: string]: any } = any>(): Union<UnionSchema>;\r\n  new <UnionSchema extends { [key: string]: any } = any>(\r\n    discr: Layout<any, any>,\r\n    defaultLayout: Layout<any, any>,\r\n    property?: string,\r\n  ): Union<UnionSchema>;\r\n}\r\nexport const Union = _Union as unknown as UnionConstructor;\r\n//#endregion\r\n\r\n//#region ------------------- BitStructure -------------------\r\nexport type BitStructure<T = unknown /* TEMP */, P = \"\"> = Layout<T, P>;\r\ninterface BitStructureConstructor {\r\n  new (...params: any[]): BitStructure;\r\n}\r\nexport const BitStructure = _BitStructure as BitStructureConstructor;\r\n//#endregion\r\n\r\n//#region ------------------- UInt -------------------\r\nexport type UInt<T = any, P = \"\"> = Layout<T, P>;\r\ninterface UIntConstructor {\r\n  new <T, P>(span?: T, property?: P): UInt<T, P>;\r\n}\r\nexport const UInt = _UInt as UIntConstructor;\r\n//#endregion\r\n\r\n//#region ------------------- Blob -------------------\r\nexport type Blob<P extends string = \"\"> = Layout<Buffer, P>;\r\ninterface BlobConstructor {\r\n  new (...params: ConstructorParameters<LayoutConstructor>): Blob;\r\n}\r\nexport const Blob = _Blob as unknown as BlobConstructor;\r\n//#endregion\r\n\r\nexport const greedy = _greedy as <P extends string = \"\">(elementSpan?: number, property?: P) => Layout<number, P>;\r\nexport const u8 = _u8 as <P extends string = \"\">(property?: P) => Layout<number, P>;\r\nexport const u16 = _u16 as <P extends string = \"\">(property?: P) => Layout<number, P>;\r\nexport const u24 = _u24 as <P extends string = \"\">(property?: P) => Layout<number, P>;\r\nexport const u32 = _u32 as <P extends string = \"\">(property?: P) => Layout<number, P>;\r\nexport const u40 = _u40 as <P extends string = \"\">(property?: P) => Layout<number, P>;\r\nexport const u48 = _u48 as <P extends string = \"\">(property?: P) => Layout<number, P>;\r\nexport const nu64 = _nu64 as <P extends string = \"\">(property?: P) => Layout<number, P>;\r\nexport const u16be = _u16be as <P extends string = \"\">(property?: P) => Layout<number, P>;\r\nexport const u24be = _u24be as <P extends string = \"\">(property?: P) => Layout<number, P>;\r\nexport const u32be = _u32be as <P extends string = \"\">(property?: P) => Layout<number, P>;\r\nexport const u40be = _u40be as <P extends string = \"\">(property?: P) => Layout<number, P>;\r\nexport const u48be = _u48be as <P extends string = \"\">(property?: P) => Layout<number, P>;\r\nexport const nu64be = _nu64be as <P extends string = \"\">(property?: P) => Layout<number, P>;\r\nexport const s8 = _s8 as <P extends string = \"\">(property?: P) => Layout<number, P>;\r\nexport const s16 = _s16 as <P extends string = \"\">(property?: P) => Layout<number, P>;\r\nexport const s24 = _s24 as <P extends string = \"\">(property?: P) => Layout<number, P>;\r\nexport const s32 = _s32 as <P extends string = \"\">(property?: P) => Layout<number, P>;\r\nexport const s40 = _s40 as <P extends string = \"\">(property?: P) => Layout<number, P>;\r\nexport const s48 = _s48 as <P extends string = \"\">(property?: P) => Layout<number, P>;\r\nexport const ns64 = _ns64 as <P extends string = \"\">(property?: P) => Layout<number, P>;\r\nexport const s16be = _s16be as <P extends string = \"\">(property?: P) => Layout<number, P>;\r\nexport const s24be = _s24be as <P extends string = \"\">(property?: P) => Layout<number, P>;\r\nexport const s32be = _s32be as <P extends string = \"\">(property?: P) => Layout<number, P>;\r\nexport const s40be = _s40be as <P extends string = \"\">(property?: P) => Layout<number, P>;\r\nexport const s48be = _s48be as <P extends string = \"\">(property?: P) => Layout<number, P>;\r\nexport const ns64be = _ns64be as <P extends string = \"\">(property?: P) => Layout<number, P>;\r\nexport const f32 = _f32 as <P extends string = \"\">(property?: P) => Layout<number, P>;\r\nexport const f32be = _f32be as <P extends string = \"\">(property?: P) => Layout<number, P>;\r\nexport const f64 = _f64 as <P extends string = \"\">(property?: P) => Layout<number, P>;\r\nexport const f64be = _f64be as <P extends string = \"\">(property?: P) => Layout<number, P>;\r\n\r\nexport const struct = _struct as <T, P extends string = \"\">(\r\n  fields: T,\r\n  property?: P,\r\n  decodePrefixes?: boolean,\r\n) => T extends Layout<infer Value, infer Property>[]\r\n  ? Structure<\r\n      Value,\r\n      P,\r\n      {\r\n        [K in Exclude<Extract<Property, string>, \"\">]: Extract<T[number], Layout<any, K>> extends Layout<infer V, any>\r\n          ? V\r\n          : any;\r\n      }\r\n    >\r\n  : any;\r\n\r\nexport const seq = _seq as unknown as <T, P>(\r\n  elementLayout: Layout<T, string>,\r\n  count: number | Layout<number, string>,\r\n  property?: P,\r\n) => Layout<T[]>;\r\nexport const union = _union as <UnionSchema extends { [key: string]: any } = any>(\r\n  discr: Layout<any, any>,\r\n  defaultLayout?: any,\r\n  property?: string,\r\n) => Union<UnionSchema>;\r\nexport const unionLayoutDiscriminator = _unionLayoutDiscriminator as <P extends string = \"\">(\r\n  layout: Layout<any, P>,\r\n  property?: P,\r\n) => any;\r\nexport const blob = _blob as unknown as <P extends string = \"\">(\r\n  length: number | Layout<number, P>,\r\n  property?: P,\r\n) => Blob<P>;\r\nexport const cstr = _cstr as <P extends string = \"\">(property?: P) => Layout<string, P>;\r\nexport const utf8 = _utf8 as <P extends string = \"\">(maxSpan: number, property?: P) => Layout<string, P>;\r\nexport const bits = _bits as unknown as <T, P extends string = \"\">(\r\n  word: Layout<T>,\r\n  msb?: boolean,\r\n  property?: P,\r\n) => BitStructure<T, P>; // TODO: not quite sure\r\nexport const offset = _offset as unknown as <T, P extends string = \"\">(\r\n  layout: Layout<T, P>,\r\n  offset?: number,\r\n  property?: P,\r\n) => Layout<T, P>;\r\n\r\nexport type GetStructureSchema<T extends Structure> = T extends Structure<any, any, infer S> ? S : unknown;\r\n","import { PublicKey } from \"@solana/web3.js\";\r\nimport BN from \"bn.js\";\r\n\r\nimport {\r\n  blob,\r\n  bool,\r\n  GetLayoutSchemaFromStructure,\r\n  GetStructureFromLayoutSchema,\r\n  GetStructureSchema,\r\n  i64,\r\n  i8,\r\n  publicKey,\r\n  seq,\r\n  struct,\r\n  u128,\r\n  u64,\r\n  u8,\r\n} from \"../../marshmallow\";\r\n\r\nimport { poolTypeV6 } from \"./config\";\r\nimport { RewardType } from \"./type\";\r\n\r\nexport const associatedLedgerAccountLayout = struct([u8(\"instruction\")]);\r\nexport const withdrawRewardLayout = struct([u8(\"instruction\")]);\r\n\r\nconst farmStateRewardInfoV6Layout = struct([\r\n  u64(\"rewardState\"),\r\n  u64(\"rewardOpenTime\"),\r\n  u64(\"rewardEndTime\"),\r\n  u64(\"rewardLastUpdateTime\"),\r\n  u64(\"totalReward\"),\r\n  u64(\"totalRewardEmissioned\"),\r\n  u64(\"rewardClaimed\"),\r\n  u64(\"rewardPerSecond\"),\r\n  u128(\"accRewardPerShare\"),\r\n  publicKey(\"rewardVault\"),\r\n  publicKey(\"rewardMint\"),\r\n  publicKey(\"rewardSender\"),\r\n  u64(\"rewardType\"),\r\n  seq(u64(), 15, \"padding\"),\r\n]);\r\n\r\nexport const realFarmStateV3Layout = struct([\r\n  u64(\"state\"),\r\n  u64(\"nonce\"),\r\n  publicKey(\"lpVault\"),\r\n  publicKey(\"rewardVault\"),\r\n  publicKey(),\r\n  publicKey(),\r\n  u64(),\r\n  u64(),\r\n  u64(\"totalReward\"),\r\n  u128(\"perShareReward\"),\r\n  u64(\"lastSlot\"),\r\n  u64(\"perSlotReward\"),\r\n]);\r\n\r\nexport const realFarmStateV5Layout = struct([\r\n  u64(\"state\"),\r\n  u64(\"nonce\"),\r\n  publicKey(\"lpVault\"),\r\n  publicKey(\"rewardVaultA\"),\r\n  u64(\"totalRewardA\"),\r\n  u128(\"perShareRewardA\"),\r\n  u64(\"perSlotRewardA\"),\r\n  u8(\"option\"),\r\n  publicKey(\"rewardVaultB\"),\r\n  blob(7),\r\n  u64(\"totalRewardB\"),\r\n  u128(\"perShareRewardB\"),\r\n  u64(\"perSlotRewardB\"),\r\n  u64(\"lastSlot\"),\r\n  publicKey(),\r\n]);\r\n\r\nexport const realFarmV6Layout = struct([\r\n  u64(),\r\n  u64(\"state\"),\r\n  u64(\"nonce\"),\r\n  u64(\"validRewardTokenNum\"),\r\n  u128(\"rewardMultiplier\"),\r\n  u64(\"rewardPeriodMax\"),\r\n  u64(\"rewardPeriodMin\"),\r\n  u64(\"rewardPeriodExtend\"),\r\n  publicKey(\"lpMint\"),\r\n  publicKey(\"lpVault\"),\r\n  seq(farmStateRewardInfoV6Layout, 5, \"rewardInfos\"),\r\n  publicKey(\"creator\"),\r\n  publicKey(),\r\n  seq(u64(), 32, \"padding\"),\r\n]);\r\n\r\nexport const farmStateV3Layout = new Proxy(\r\n  realFarmStateV3Layout as GetStructureFromLayoutSchema<\r\n    {\r\n      version: 3;\r\n      rewardInfos: {\r\n        rewardVault: PublicKey;\r\n        totalReward: BN;\r\n        perSlotReward: BN;\r\n        perShareReward: BN;\r\n      }[];\r\n    } & GetLayoutSchemaFromStructure<typeof realFarmStateV3Layout>\r\n  >,\r\n  {\r\n    get(target, p, receiver): any {\r\n      if (p === \"decode\")\r\n        return (...decodeParams: Parameters<typeof target[\"decode\"]>) => {\r\n          const originalResult = target.decode(...decodeParams);\r\n          return {\r\n            ...originalResult,\r\n            version: 3,\r\n            rewardInfos: [\r\n              {\r\n                rewardVault: originalResult.rewardVault,\r\n                totalReward: originalResult.totalReward,\r\n                perSlotReward: originalResult.perSlotReward,\r\n                perShareReward: originalResult.perShareReward,\r\n              },\r\n            ],\r\n          };\r\n        };\r\n      else return Reflect.get(target, p, receiver);\r\n    },\r\n  },\r\n);\r\n\r\nexport const farmStateV5Layout = new Proxy(\r\n  realFarmStateV5Layout as GetStructureFromLayoutSchema<\r\n    {\r\n      version: 5;\r\n      rewardInfos: {\r\n        rewardVault: PublicKey;\r\n        totalReward: BN;\r\n        perSlotReward: BN;\r\n        perShareReward: BN;\r\n      }[];\r\n    } & GetLayoutSchemaFromStructure<typeof realFarmStateV5Layout>\r\n  >,\r\n  {\r\n    get(target, p, receiver): any {\r\n      if (p === \"decode\")\r\n        return (...decodeParams: Parameters<typeof target[\"decode\"]>) => {\r\n          const originalResult = target.decode(...decodeParams);\r\n          return {\r\n            ...originalResult,\r\n            version: 5,\r\n            rewardInfos: [\r\n              {\r\n                rewardVault: originalResult.rewardVaultA,\r\n                totalReward: originalResult.totalRewardA,\r\n                perSlotReward: originalResult.perSlotRewardA,\r\n                perShareReward: originalResult.perShareRewardA,\r\n              },\r\n              {\r\n                rewardVault: originalResult.rewardVaultB,\r\n                totalReward: originalResult.totalRewardB,\r\n                perSlotReward: originalResult.perSlotRewardB,\r\n                perShareReward: originalResult.perShareRewardB,\r\n              },\r\n            ],\r\n          };\r\n        };\r\n      else return Reflect.get(target, p, receiver);\r\n    },\r\n  },\r\n);\r\n\r\nexport const farmStateV6Layout = new Proxy(\r\n  realFarmV6Layout as GetStructureFromLayoutSchema<\r\n    {\r\n      version: 6;\r\n      rewardInfos: {\r\n        rewardState: BN;\r\n        rewardOpenTime: BN;\r\n        rewardEndTime: BN;\r\n        rewardLastUpdateTime: BN;\r\n        totalReward: BN;\r\n        totalRewardEmissioned: BN;\r\n        rewardClaimed: BN;\r\n        rewardPerSecond: BN;\r\n        accRewardPerShare: BN;\r\n        rewardVault: PublicKey;\r\n        rewardMint: PublicKey;\r\n        rewardSender: PublicKey;\r\n        rewardType: RewardType;\r\n      }[];\r\n    } & GetLayoutSchemaFromStructure<typeof realFarmV6Layout>\r\n  >,\r\n  {\r\n    get(target, p, receiver): any {\r\n      if (p === \"decode\")\r\n        return (...decodeParams: Parameters<typeof target[\"decode\"]>) => {\r\n          const originalResult = target.decode(...decodeParams);\r\n          return {\r\n            ...originalResult,\r\n            version: 6,\r\n            rewardInfos: originalResult.rewardInfos.map((item) => ({\r\n              ...item,\r\n              rewardType: (Object.entries(poolTypeV6).find((i) => String(i[1]) === item.rewardType.toString()) ?? [\r\n                \"Standard SPL\",\r\n              ])[0],\r\n            })),\r\n          };\r\n        };\r\n      else return Reflect.get(target, p, receiver);\r\n    },\r\n  },\r\n);\r\n\r\nexport const farmRewardTimeInfoLayout = struct([\r\n  u64(\"isSet\"),\r\n  u64(\"rewardPerSecond\"),\r\n  u64(\"rewardOpenTime\"),\r\n  u64(\"rewardEndTime\"),\r\n  u64(\"rewardType\"),\r\n]);\r\n\r\nexport const farmRewardLayout = struct([\r\n  u8(\"instruction\"),\r\n  u64(\"nonce\"),\r\n  seq(farmRewardTimeInfoLayout, 5, \"rewardTimeInfo\"),\r\n]);\r\n\r\nexport const farmRewardRestartLayout = struct([\r\n  u8(\"instruction\"),\r\n  u64(\"rewardReopenTime\"),\r\n  u64(\"rewardEndTime\"),\r\n  u64(\"rewardPerSecond\"),\r\n]);\r\n\r\nexport const farmAddRewardLayout = struct([\r\n  u8(\"instruction\"),\r\n  u64(\"isSet\"),\r\n  u64(\"rewardPerSecond\"),\r\n  u64(\"rewardOpenTime\"),\r\n  u64(\"rewardEndTime\"),\r\n  u64(\"rewardType\"),\r\n]);\r\n\r\nexport type FarmStateLayoutV3 = typeof farmStateV3Layout;\r\nexport type FarmStateLayoutV5 = typeof farmStateV5Layout;\r\nexport type FarmStateLayoutV6 = typeof farmStateV6Layout;\r\n\r\nexport type FarmStateV3 = GetStructureSchema<FarmStateLayoutV3>;\r\nexport type FarmStateV5 = GetStructureSchema<FarmStateLayoutV5>;\r\nexport type FarmStateV6 = GetStructureSchema<FarmStateLayoutV6>;\r\n\r\nexport type FarmState = FarmStateV3 | FarmStateV5 | FarmStateV6;\r\n// farmStateLayoutV3\r\nexport type FarmStateLayout = FarmStateLayoutV3 | FarmStateLayoutV5 | FarmStateLayoutV6;\r\n\r\n/* ================= ledger layouts ================= */\r\nexport const farmLedgerLayoutV3_1 = struct([\r\n  u64(\"state\"),\r\n  publicKey(\"id\"),\r\n  publicKey(\"owner\"),\r\n  u64(\"deposited\"),\r\n  seq(u64(), 1, \"rewardDebts\"),\r\n]);\r\n\r\nexport const farmLedgerLayoutV3_2 = struct([\r\n  u64(\"state\"),\r\n  publicKey(\"id\"),\r\n  publicKey(\"owner\"),\r\n  u64(\"deposited\"),\r\n  seq(u128(), 1, \"rewardDebts\"),\r\n  u64(\"\"),\r\n  u64(\"voteLockedBalance\"),\r\n  seq(u64(), 15),\r\n]);\r\n\r\nexport const farmLedgerLayoutV5_1 = struct([\r\n  u64(\"state\"),\r\n  publicKey(\"id\"),\r\n  publicKey(\"owner\"),\r\n  u64(\"deposited\"),\r\n  seq(u64(), 2, \"rewardDebts\"),\r\n]);\r\n\r\nexport const farmLedgerLayoutV5_2 = struct([\r\n  u64(\"state\"),\r\n  publicKey(\"id\"),\r\n  publicKey(\"owner\"),\r\n  u64(\"deposited\"),\r\n  seq(u128(), 2, \"rewardDebts\"),\r\n  seq(u64(), 17),\r\n]);\r\n\r\nexport const farmLedgerLayoutV6_1 = struct([\r\n  u64(),\r\n  u64(\"state\"),\r\n  publicKey(\"id\"),\r\n  publicKey(\"owner\"),\r\n  u64(\"deposited\"),\r\n  seq(u128(), 5, \"rewardDebts\"),\r\n  seq(u64(), 16),\r\n]);\r\n\r\nexport type FarmLedgerLayoutV3_1 = typeof farmLedgerLayoutV3_1;\r\nexport type FarmLedgerLayoutV3_2 = typeof farmLedgerLayoutV3_2;\r\nexport type FarmLedgerLayoutV5_1 = typeof farmLedgerLayoutV5_1;\r\nexport type FarmLedgerLayoutV5_2 = typeof farmLedgerLayoutV5_2;\r\nexport type FarmLedgerLayoutV6_1 = typeof farmLedgerLayoutV6_1;\r\nexport type FarmLedgerLayout =\r\n  | FarmLedgerLayoutV3_1\r\n  | FarmLedgerLayoutV3_2\r\n  | FarmLedgerLayoutV5_1\r\n  | FarmLedgerLayoutV5_2\r\n  | FarmLedgerLayoutV6_1;\r\n\r\nexport type FarmLedgerV3_1 = GetStructureSchema<FarmLedgerLayoutV3_1>;\r\nexport type FarmLedgerV3_2 = GetStructureSchema<FarmLedgerLayoutV3_2>;\r\nexport type FarmLedgerV5_1 = GetStructureSchema<FarmLedgerLayoutV5_1>;\r\nexport type FarmLedgerV5_2 = GetStructureSchema<FarmLedgerLayoutV5_2>;\r\nexport type FarmLedgerV6_1 = GetStructureSchema<FarmLedgerLayoutV6_1>;\r\nexport type FarmLedger = FarmLedgerV3_1 | FarmLedgerV3_2 | FarmLedgerV5_1 | FarmLedgerV5_2 | FarmLedgerV6_1;\r\n\r\nexport const dwLayout = struct([u8(\"instruction\"), u64(\"amount\")]);\r\n\r\nexport const VoterVotingMintConfig = struct([\r\n  publicKey(\"mint\"),\r\n  publicKey(\"grantAuthority\"),\r\n  u64(\"baselineVoteWeightScaledFactor\"),\r\n  u64(\"maxExtraLockupVoteWeightScaledFactor\"),\r\n  u64(\"lockupSaturationSecs\"),\r\n\r\n  i8(\"digitShift\"), // TODO\r\n  seq(u8(), 7, \"reserved1\"),\r\n  seq(u64(), 7, \"reserved2\"),\r\n]);\r\n\r\nexport const VoterRegistrar = struct([\r\n  blob(8),\r\n  publicKey(\"governanceProgramId\"),\r\n  publicKey(\"realm\"),\r\n  publicKey(\"realmGoverningTokenMint\"),\r\n  publicKey(\"realmAuthority\"),\r\n\r\n  seq(u8(), 32, \"reserved1\"),\r\n  seq(VoterVotingMintConfig, 4, \"votingMints\"),\r\n\r\n  i64(\"timeOffset\"),\r\n  u8(\"bump\"),\r\n  seq(u8(), 7, \"reserved2\"),\r\n  seq(u64(), 11, \"reserved3\"),\r\n]);\r\n\r\nexport const VoterLockup = struct([i64(\"startTime\"), i64(\"endTime\"), u8(\"kind\"), seq(u8(), 15, \"reserved\")]);\r\n\r\nexport const VoterDepositEntry = struct([\r\n  seq(VoterLockup, 1, \"lockup\"),\r\n  u64(\"amountDeposited_native\"),\r\n  u64(\"amountInitiallyLockedNative\"),\r\n  bool(\"isUsed\"),\r\n  bool(\"allowClawback\"),\r\n  u8(\"votingMintConfigIdx\"),\r\n  seq(u8(), 29, \"reserved\"),\r\n]);\r\n\r\nexport const Voter = struct([\r\n  blob(8),\r\n  publicKey(\"voterAuthority\"),\r\n  publicKey(\"registrar\"),\r\n\r\n  seq(VoterDepositEntry, 32, \"deposits\"),\r\n\r\n  u8(\"voterBump\"),\r\n  u8(\"voterWweightRecordBump\"),\r\n  seq(u8(), 94, \"reserved\"),\r\n]);\r\n"],"mappings":"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","names":[]}